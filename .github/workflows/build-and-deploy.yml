name: "Build and deploy"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
    types: [ "closed" ]

env:
  VERSION: 0.0.1-SNAPSHOT

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get cache for local Maven repository
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: maven
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: npm dependencies and Angular cli
        run: npm install -g @angular/cli@17
      - name: Build the webapp
        run:  mvn --batch-mode --update-snapshots clean install --file pom.xml
      - name: Copy jar
        run: cp /home/runner/work/glacier/glacier/target/glacier-*.jar glacier.jar
      - name: Archive glacier jar
        uses: actions/upload-artifact@v4
        with:
          name: glacier
          path: glacier.jar
          retention-days: 1
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  create-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: glacier
          path: containerimage
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/seism0saurus/glacier
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: containerimage/.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max

  test-image:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: Main Build
    needs: create-image
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
    services:
      glacier:
        image: ghcr.io/seism0saurus/glacier:main
        env:
          SPRING_PROFILES_ACTIVE: default
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          HANDLE: glacier@botsin.space
          INSTANCE: botsin.space
          MY_DOMAIN: glacier:8080
        ports:
          - 8080:8080

  promote-image-to-production:
    runs-on: ubuntu-latest
    needs: test-image
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag and push container image
        uses: docker/build-push-action@v5
        with:
          context: containerimage/.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: promote-image-to-production
    environment: glacier.seism0saurus.de
    steps:
      - name: Prepare ssh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        run: |
          echo "${SSH_KEY}" > ssh.key
          chmod 600 ssh.key
          mkdir ~/.ssh
          echo "${KNOWN_HOSTS}" > ~/.ssh/known_hosts
      - name: Restart docker-compose
        env:
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ vars.SSH_HOST }}
        run: ssh -i ssh.key -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} -C "sudo /usr/local/bin/upgrade-glacier.sh"