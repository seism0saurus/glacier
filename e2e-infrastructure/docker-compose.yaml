version: "3"

networks:
  web:
  mastodon:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - 8008:8008
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./localhost.crt:/etc/nginx/certs/localhost.crt
      - ./localhost.key:/etc/nginx/certs/localhost.key
    networks:
      - web
      - mastodon
    depends_on:
      - web
      - streaming

  db:
    image: postgres:14-alpine
    container_name: db
    restart: always
    shm_size: 256mb
    networks:
      - mastodon
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon', '-d', 'mastodon']
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "mastodon"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "mastodon"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    networks:
      - mastodon
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  web:
    image: ghcr.io/mastodon/mastodon:v4.3.3
    container_name: web
    restart: always
    env_file: mastodon.env
    command: bundle exec puma -C config/puma.rb
    networks:
      - mastodon
    healthcheck:
      test: ['CMD-SHELL',"curl -s --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    depends_on:
      - db
      - redis
    volumes:
      - ./mastodon:/mastodon/public/system

  streaming:
    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3
    container_name: streaming
    restart: always
    env_file: mastodon.env
    command: node ./streaming/index.js
    networks:
      - mastodon
    healthcheck:
      test: ['CMD-SHELL', "curl -s --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
    depends_on:
      - db
      - redis

  sidekiq:
    image: ghcr.io/mastodon/mastodon:v4.3.3
    container_name: sidekiq
    restart: always
    env_file: mastodon.env
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - mastodon
    volumes:
      - ./mastodon:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  glacier:
    container_name: glacier
    image: ghcr.io/seism0saurus/glacier:${GLACIER_IMAGE_TAG}
    ports:
      - 8080:8080
    networks:
      - mastodon
    environment:
      SPRING_PROFILES_ACTIVE: "default"
      ACCESS_KEY: "1Ukr3V1otQaiOyk-BcexmgQvO3EGzgccxeicWVnnAnE"
      HANDLE: "glacier_e2e_test"
      INSTANCE: "nginx"
      MY_DOMAIN: "localhost:443"
      MY_WEBSITE: "seism0saurus.de"
      MY_NAME: "seism0saurus"
      MY_STREET_AND_NUMBER: "sometherestreet 1"
      MY_ZIP_CODE: "123456"
      MY_CITY: "somecity"
      MY_COUNTRY: "Germany"
      MY_MAIL: "kontakt@seism0saurus.de"
      MY_PHONE: "+1234567890"
    depends_on:
      - nginx