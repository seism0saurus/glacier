networks:
  mastodon:

services:
  db:
    image: postgres:14-alpine
    container_name: db
    restart: unless-stopped
    shm_size: 256mb
    expose:
      - "5432"
    networks:
      - mastodon
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon', '-d', 'mastodon']
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "mastodon"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "mastodon"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    expose:
      - "6379"
    networks:
      - mastodon
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  web:
    image: ghcr.io/mastodon/mastodon:v4.3.3
    container_name: web
    restart: unless-stopped
    env_file: mastodon.env
    command: bundle exec puma -C config/puma.rb
    expose:
      - "3000"
    networks:
      - mastodon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon.rule=Host(`proxy`) && !PathPrefix(`/api/v1/streaming`)"
      - "traefik.http.routers.mastodon.entrypoints=websecure"
      - "traefik.http.routers.mastodon.tls=true"
    healthcheck:
      test: ['CMD-SHELL',"curl --noproxy localhost localhost:3000/health | grep -q 'OK' || exit 1"]
    volumes:
      - ./mastodon:/mastodon/public/system
    depends_on:
      - db
      - redis

  streaming:
    image: ghcr.io/mastodon/mastodon-streaming:v4.3.3
    container_name: streaming
    restart: unless-stopped
    env_file: mastodon.env
    command: node ./streaming/index.js
    expose:
      - "4000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.streaming.rule=Host(`proxy`) && PathPrefix(`/api/v1/streaming`)"
      - "traefik.http.routers.streaming.entrypoints=websecure"
      - "traefik.http.routers.streaming.tls=true"
    networks:
      - mastodon
    healthcheck:
      test: ['CMD-SHELL', "curl --noproxy localhost localhost:4000/api/v1/streaming/health | grep -q 'OK' || exit 1"]
    depends_on:
      - db
      - redis

  sidekiq:
    image: ghcr.io/mastodon/mastodon:v4.3.3
    container_name: sidekiq
    restart: unless-stopped
    env_file: mastodon.env
    command: bundle exec sidekiq
    networks:
      - mastodon
    volumes:
      - ./mastodon:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    depends_on:
      - db
      - redis

  proxy:
    image: traefik:3
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - ./traefik.yml:/traefik.yml
      - ./dynamic.yml:/dynamic.yml
      - ./proxy.crt:/etc/ssl/proxy.crt
      - ./proxy.key:/etc/ssl/proxy.key
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mastodon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"
    healthcheck:
      test: ['CMD-SHELL', "traefik healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - web
      - streaming
